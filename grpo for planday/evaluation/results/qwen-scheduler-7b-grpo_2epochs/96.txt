<think>
To create an optimized schedule that maximizes the sum of weighted event durations while respecting the given constraints, let's analyze the events:

1. **3D printing workshop**: 
   - Start: 04:39
   - End: 05:09
   - Weight: 2

2. **Drone building hackathon**:
   - Start: 05:50
   - End: 07:20
   - Weight: 1

3. **Live coding on Rust**:
   - Start: 20:36
   - End: 21:21
   - Weight: 1

4. **Digital detox meditation session**:
   - Start: 20:52
   - End: 21:37
   - Weight: 1

Given that the 3D printing workshop has a higher priority (weight = 2), it should not be moved or shortened. We need to ensure no overlaps and maximize the sum of weighted event durations.

Let's consider the placement:

- The 3D printing workshop starts at 04:39 and ends at 05:09.
- The Drone building hackathon starts at 05:50 and ends at 07:20, which does not overlap with the 3D printing workshop.
- The Live coding on Rust and Digital detox meditation session both start after 20:36, so they do not conflict with each other either.

Since all events respect the chronological order and there are no conflicts, we can include all of them in the schedule without any exclusions.

Final Schedule:
- 3D printing workshop (04:39 - 05:09) [Weight: 2]
- Drone building hackathon (05:50 - 07:20) [Weight: 1]
- Live coding on Rust (20:36 - 21:21) [Weight: 1]
- Digital detox meditation session (20:52 - 21:37) [Weight: 1]

Sum of weighted durations: \(2 + 1 + 1 + 1 = 5\)

This schedule meets all the requirements and optimizes the sum of weighted event durations.
</think>

<schedule>
<event>
<name>3D printing workshop</name>
<start>04:39</start>
<end>05:09</end>
</event>
<event>
<name>Drone building hackathon</name>
<start>05:50</start>
<end>07:20</end>
</event>
<event>
<name>Live coding on Rust</name>
<start>20:36</start>
<end>21:21</end>
</event>
<event>
<name>Digital detox meditation session</name>
<start>20:52</start>
<end>21:37</end>
</event>
</schedule>