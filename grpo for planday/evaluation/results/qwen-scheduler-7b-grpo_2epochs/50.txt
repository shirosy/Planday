<think>
To create an optimized schedule that maximizes the sum of weighted event durations while respecting all constraints, I will follow these steps:

1. **Identify Priority Events**: Silent disco party and Fireworks are high-priority events with a weight of 2.
2. **Check for Conflicts**: Ensure that no two events overlap, especially between priority events.
3. **Maximize Weighted Duration**: Prioritize including longer events first and exclude shorter ones if necessary to maintain chronological order and avoid conflicts.

Let's analyze the events:

- **Fireworks (08:34 - 09:34)**: Weight = 2
- **Silent disco party (14:40 - 16:10)**: Weight = 2
- **David Guetta DJ set (17:32 - 18:17)**: Weight = 1
- **Sum 41 concert (18:10 - 18:25)**: Weight = 1
- **Korean BBQ food trucks (21:41 - 22:26)**: Weight = 1

### Step-by-Step Analysis:

1. **Include Fireworks**:
   - Start: 08:34
   - End: 09:34
   - Weight: 2

2. **Include Silent disco party**:
   - Start: 14:40
   - End: 16:10
   - Weight: 2

3. **Evaluate David Guetta DJ set**:
   - Start: 17:32
   - End: 18:17
   - This event overlaps with Sum 41 concert (18:10 - 18:25).
   - Since Sum 41 concert has a lower weight (1 vs 2), we should exclude it to maximize the sum of weighted durations.

4. **Include Korean BBQ food trucks**:
   - Start: 21:41
   - End: 22:26
   - Weight: 1

By following these steps, we ensure that the schedule respects the rules and maximizes the sum of weighted event durations.

</think>
<schedule>
<event>
<name>Fireworks</name>
<start>08:34</start>
<end>09:34</end>
</event>
<event>
<name>Silent disco party</name>
<start>14:40</start>
<end>16:10</end>
</event>
<event>
<name>Korean BBQ food trucks</name>
<start>21:41</start>
<end>22:26</end>
</event>
</schedule>